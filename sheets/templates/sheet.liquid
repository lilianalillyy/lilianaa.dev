<html>

<head>
  <title>{{ title }}</title>

  {{ if css }}
    <style>
      {{ css }}
    </style>
  {{ endif }}

  <style>
    th.freezebar-origin-ltr {
      opacity: 0 !important;
    }
  </style>

  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
</head>

<body>
  <div id="app-root" class="container-fluid">
    <ul class="sheet-controls nav nav-pills my-5">

    </ul>
    
    <div id="view-root"></div>
  </div>

  <script>
    window.__data__ = {{ sheets | json }};
  </script>

  <script>
    const viewRoot = document.getElementById("view-root");

    const controlsContainer = document.querySelector(".sheet-controls");
    
    let sheets = [];
    let activeSheet = null;

    function getData() {
      return window.__data__;
    }

    function getSheetName(controlEl) {
      return controlEl.getAttribute("data-sheet-name") ?? null;
    }

    function updateView({ el, html }) {
      sheets.forEach(({ el }) => el.classList.remove("active"));

      el.classList.add("active");

      const tempEl = document.createElement("div");
      tempEl.innerHTML = html;

      const gridContainer = tempEl.querySelector(".grid-container");
      if (gridContainer) {
        viewRoot.innerHTML = "";
        viewRoot.appendChild(gridContainer);
      
        const table = gridContainer.querySelector("table");
        if (table) {
          table.classList.add("table")
        }
      }
    }

    document.addEventListener("DOMContentLoaded", () => {
      const data = getData();

      sheets = Object.keys(data).map(sheetName => {
        const control = document.createElement("button");

        const sheet = { name: sheetName, ...data[sheetName], el: control };

        control.innerText = sheet.name;
        control.classList.add("sheet-control", "nav-link");
        control.addEventListener("click", () => updateView(sheet));

        if (controlsContainer) {
          controlsContainer.appendChild(control);
        }

        return sheet
      })

      if (sheets.length >= 1) {
        updateView(sheets[0]);
      }
    })
  </script>
</body>

</html>